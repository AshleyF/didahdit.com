<html>
    <head>
        <title>CW Tools</title>
        <style>
            body {
                background-color: black;
                color: white;
                font-family: sans-serif; }
            a { color: #eee; }
            button { background-color: #555; color: #eee; }
            textarea { background-color: #555; color: #eee; }
            h5 { color: #555; }
            hr { color: #555; }
            tr { background-color: #555; }
            td { background-color: black; }
        </style>
        <script>
            const defaultSpeed = 25;
            const canvasWidth = 1450;
            const canvasHeight = 64;

            var connectedPort = null;
            var morse = "  ETIANMSURWDKGOHVF L PJBXCYZQ  54 3   2& +    16=/   ( 7   8 90     $      ?_    \"  .    @   '  -        ;! )     ,    :";
            var p = 1;
            var message = "&nbsp;";
            var sending = "";
            var char = '';

            var audioStarted = false;
            var audioCtx;
            var gain;

            function startAudio() {
                audioCtx = new (window.AudioContext || window.webkitAudioContext)();
                var oscillator = audioCtx.createOscillator();
                oscillator.frequency.value = 750;
                gain = audioCtx.createGain();
                gain.gain.value = 0;
                oscillator.connect(gain);
                gain.connect(audioCtx.destination);
                oscillator.start(0);
                audioStarted = true;
            }

            var mode;
            var memory;
            var speed;
            var ditlen;
            var delay = 0.03;
            var ramp = 0.01;

            var t = 0;
            function playTone(len) {
                if (!audioStarted) startAudio();
                var c = audioCtx.currentTime;
                t = c > t ? c : t;
                gain.gain.setTargetAtTime(1, t, ramp);
                t += len;
                gain.gain.setTargetAtTime(0, t, ramp);
                t += ditlen;
                var end = (new Date()).getTime() / 1000 + len;
                letterBreak = end + (ditlen * 3);
                wordBreak = end + (ditlen * 7);
            }

            function dit() {
                p *= 2;
                updateCharacter();
                playTone(ditlen)
            }

            function dah() {
                p = p * 2 + 1;
                updateCharacter();
                playTone(3 * ditlen);
            }

            function load() {
                if (!("serial" in navigator)) {
                    // The Web Serial API is supported.
                    alert("SERIAL UNAVAILABLE");
                }
                navigator.serial.addEventListener('connect', (e) => {
                    // Connect to `e.target` or add it to a list of available ports.
                    //alert("Connected: " + JSON.stringify(e));
                });
                navigator.serial.addEventListener('disconnect', (e) => {
                    // Remove `e.target` from the list of available ports.
                    //alert("Disconnected: " + JSON.stringify(e));
                });
                document.getElementById("message").addEventListener('keypress', (e) => {
                    if (e.charCode == 13 && connectedPort != null) {
                        sendMessage();
                        e.target.value = "";
                        e.preventDefault();
                    }
                });
                document.body.addEventListener('keydown', (e) => {
                    if (!e.repeat && e.srcElement.id != "message") {
                        switch (e.code) {
                            case "Comma":
                                setKeys(true, rightDown);
                                break;
                            case "Period":
                                setKeys(leftDown, true);
                                break;
                            case "Escape":
                                reset();
                                break;
                        }
                    }
                });
                document.body.addEventListener('keyup', (e) => {
                    if (e.srcElement.id != "message") {
                        switch (e.code) {
                            case "Comma":
                                setKeys(false, rightDown);
                                break;
                            case "Period":
                                setKeys(leftDown, false);
                                break;
                        }
                    }
                });
                reset();
                setSpeed(defaultSpeed);
                setMode('U');
                setMemory(true);
                read();
                drawKeyAndToneState();
            }

            function connect() {
                // const port = await navigator.serial.requestPort();
                //const usbVendorId = 0xABCD;
                //navigator.serial.requestPort({ filters: [{ usbVendorId }]}).then((port) => {
                navigator.serial.requestPort().then((port) => {
                    // Connect to `port` or add it to the list of available ports.
                    port.open({ baudRate: 115200 }).then(() => {
                        connectedPort = port;
                        const writer = connectedPort.writable.getWriter();
                        writer.write(new Uint8Array([getSpeedByte(speed), getModeByte(mode), getMemoryByte(memory)])).then(() => {
                            writer.releaseLock();
                        });
                    }).catch(e => {
                        alert("ERROR OPENING: " + e);
                    });
                    //navigator.serial.getPorts().then((ports) => {
                    //    // Initialize the list of available ports with `ports` on page load.
                    //    alert("Ports: " + JSON.stringify(ports));
                    //});
                }).catch((e) => {
                    // The user didn't select a port.
                    alert("ERROR NO PORT CHOSEN: " + JSON.stringify(e));
                });
            }
            
            function disconnect() {
                if (connectedPort != null) {
                    connectedPort.close();
                    // TODO: reader busy/locked https://stackoverflow.com/questions/65748344/how-can-i-interrupt-a-reader-when-it-hangs-need-a-timeout-on-reader-read
                }
            }

            function sendByte(b) {
                if (connectedPort != null) {
                    const writer = connectedPort.writable.getWriter();
                    writer.write(new Uint8Array([b])).then(() => {
                        writer.releaseLock();
                    });
                }
            }

            function displayMode() {
                var modeName = mode == 'U' ? "Ultimatic" : mode == 'A' ? "Curtis-A" : mode == 'B' ? "Curtis-B" : "Unknown";
                document.getElementById('mode').innerText = modeName + " (" + speed + " WPM, " + (memory ? "with" : "no") + " memory)";
            }

            function getModeByte(m) {
                switch (mode) {
                    case 'A':
                        return 65;
                    case 'B':
                        return 66;
                    case 'U':
                        return 85;
                }
            }

            function setMode(m) {
                mode = m;
                sendByte(getModeByte(mode));
                displayMode();
            }

            function getMemoryByte(mem) {
                return mem ? 77 : 78;
            }

            function setMemory(mem) {
                memory = mem;
                sendByte(getMemoryByte(memory));
                displayMode();
            }

            function getSpeedByte(wpm) {
                return speed + 200;
            }

            function setSpeed(wpm) {
                speed = wpm;
                ditlen = 1.2 / speed;
                sendByte(getSpeedByte(wpm));
                displayMode();
            }

            function setKeys(left, right) {
                leftDown = left;
                rightDown = right;
                sendByte((left ? 0x2 : 0) | (right ? 0x1 : 0));
            }

            function send(message) {
                if (connectedPort != null) {
                    sending += message.toUpperCase() + ' ';
                    updateDisplay();
                    var data = [];
                    var word = [];
                    var prosign = false;
                    for (var i in message) {
                        var m = message[i];
                        if (m == ' ') { // word break
                            data.push(47);
                        } else {
                            if (m == '<') prosign = true;
                            if (m == '>') prosign = false;
                            var j = morse.indexOf(m.toUpperCase());
                            while (j > 1) {
                                if (j % 2 == 0) {
                                    word.push(46); // dit
                                    j /= 2;
                                } else {
                                    word.push(45); // dah
                                    j = (j - 1) / 2;
                                }
                            }
                            data = data.concat(word.reverse());
                            word = [];
                            if (!prosign) data.push(32); // letter-break
                        }
                    }
                    data.push(47); // final word break
                    const writer = connectedPort.writable.getWriter();
                    writer.write(new Uint8Array(data)).then(() => {
                        writer.releaseLock();
                    });
                }
            }

            function sendMessage() {
                if (connectedPort != null) {
                    send(document.getElementById("message").value);
                }
            }

            function updateDisplay() {
                function escape(str) {
                    return str.replace('<', "&lt;").replace('>', "&gt;");
                }
                document.getElementById('copy').innerHTML = escape(message) + escape(char) + "<span style='color:#555'>" + escape(sending) + "</span>";
            }

            function reset() {
                message = "&nbsp;";
                sending = "";
                p = 1;
                char = '';
                updateDisplay();
                var canvas = document.getElementById("canvas");
                var ctx = canvas.getContext("2d");
                ctx.fillStyle = "#000";
                ctx.fillRect(0, 0, canvasWidth, canvasHeight);
                cursor = 20;
            }

            var canvasVisible = true;
            function toggle() {
                document.getElementById('canvas').style.display = canvasVisible ? 'none' : '';
                canvasVisible = !canvasVisible;
            }

            function updateCharacter() {
                function setProsign(sign) {
                    char = '<' + sign + '>';
                }
                switch (p) {
                    case 31: // backspace
                        // TODO
                        break;
                    case 21:
                        setProsign("AA");
                        break;
                    case 34:
                        setProsign("VE");
                        break;
                    case 37:
                        setProsign("INT");
                        break;
                    case 42:
                        setProsign("AR");
                        break;
                    case 53:
                        setProsign("CT");
                        break;
                    case 69:
                        setProsign("SK");
                        break;
                    case 103:
                        setProsign("NJ");
                        break;
                    case 568:
                        setProsign("SOS");
                        break;
                    case 256: // correction (clear)
                        // TODO
                        message = "&nbsp;";
                        char = '';
                        break;
                    default:
                        if (p >= 121) { // unknown
                            // TODO
                            char = '';
                        } else {
                            char = morse[p];
                            if (char == ' ') { // unknown?
                                char = '';
                            }
                        }
                        break;
                }
                if (sending.startsWith(char)) {
                    sending = sending.substring(char.length);
                } else if (sending.startsWith(' ') && sending.length > 1 && sending.substring(1).startsWith(char)) {
                    sending = sending.substring(char.length + 1);
                }
                updateDisplay();
            }

            function copy(b) {
                switch (b) {
                    case 46: // dit
                        dit();
                        break;
                    case 45: // dah
                        dah();
                        break;
                }
            }

            var cursor = 20;
            var leftDown = false;
            var rightDown = false;
            var letterBreak = 0;
            var wordBreak = 0;
            var lastGain = 0;
            var clearNextKeyState = false;
            var clearNextMessage = false;

            function drawKeyAndToneState() {
                const ribbon = canvasHeight / 8;
                var now = (new Date()).getTime() / 1000;
                if (now < wordBreak) {
                    var canvas = document.getElementById("canvas");
                    var ctx = canvas.getContext("2d");
                    if (clearNextKeyState) {
                        ctx.fillStyle = "#000";
                        ctx.fillRect(0, 0, canvasWidth, canvasHeight);
                        cursor = 20;
                        clearNextKeyState = false;
                    }
                    if (clearNextMessage) {
                        message = "&nbsp;";
                        updateDisplay();
                        clearNextMessage = false;
                    }
                    var currentGain = gain.gain.value;
                    if ((lastGain < 0.5 && currentGain > 0.5) || (lastGain > 0.5 && currentGain < 0.5)) {
                        ctx.fillStyle = "#555"; // mark tone boundaries
                        lastGain = currentGain;
                    } else {
                        ctx.fillStyle = "#000"; // erase cursor
                    }
                    ctx.fillRect(cursor, 0, 1, canvasHeight);
                    if (rightDown) {
                        ctx.fillStyle = "#00F";
                        ctx.fillRect(cursor, ribbon, 1, ribbon);
                    }
                    if (leftDown) {
                        ctx.fillStyle = "#F00";
                        ctx.fillRect(cursor, ribbon * 3, 1, ribbon);
                    }
                   if (currentGain > 0.5) {
                        ctx.fillStyle = "#fff";
                        ctx.fillRect(cursor, ribbon * 5, 1, ribbon * 2);
                    }
                    cursor = ++cursor % canvasWidth;
                    ctx.fillStyle = "#0F0";
                    ctx.fillRect(cursor, 0, 1, canvasHeight);
                }
                if (now - letterBreak > 0) {
                    message += char;
                    char = '';
                    p = 1;
                }
                if (now - wordBreak > 0 && !message.endsWith(' ')) {
                    message += ' ';
                }
                if (now - wordBreak > ditlen * 7.0) {
                    clearNextKeyState = true;
                }
                if (now - wordBreak > ditlen * 50) {
                    clearNextMessage = true;
                }

                window.setTimeout(drawKeyAndToneState, 1);
            }

            function read() {
                if (connectedPort != null) {
                    const reader = connectedPort.readable.getReader();
                    reader.read().then(x =>
                    {
                        for (var i in x.value) {
                            var v = x.value[i];
                            if (v < 4) {
                                leftDown = (v & 0x2) != 0;
                                rightDown = (v & 0x1) != 0;
                            } else {
                                copy(v);
                            }
                        }
                        reader.releaseLock();
                        window.setTimeout(read, 10);
                    });
                } else {
                    window.setTimeout(read, 10);
                }
            }

            function simulateKeys(keys) {
                var next = (new Date()).getTime();
                function updateKeyState() {
                    if (keys.length > 0) {
                        var k = keys[0];
                        keys = keys.substring(1);
                        setKeys(k == 'L' || k == 'S', k == 'R' || k == 'S');
                        next += ditlen * 1000 / 2;
                        window.setTimeout(updateKeyState, next - (new Date()).getTime());
                    } else {
                        setKeys(false, false);
                    }
                }
                updateKeyState();
            }

            function simulateExamples(examples) {
                var next = (new Date()).getTime();
                function simulate() {
                    var keys = examples.pop();
                    simulateKeys(keys);
                    if (examples.length > 0) {
                        next += (keys.length + 12) * ditlen * 1000 / 2;
                        window.setTimeout(simulate, next - (new Date()).getTime());
                    }
                }
                examples = examples.reverse();
                simulate();
            }
        </script>
    </head>
    <body onload="load()">
        <h5 id="mode">Ultimatic (with memory)</h5>
        <h1 id="copy">&nbsp;</h1>
        <canvas id="canvas" width="1450px" height="64px" style="border: 1px solid black"></canvas>
        <hr />
        <textarea id="message" rows="2" cols="120"></textarea>
        <hr />
        <button id="connect" onclick="connect()">Connect</button>
        <button id="disconnect" onclick="disconnect()">Disconnect</button>
        <button id="send" onclick="sendMessage()">Send</button>
        <button id="reset" onclick="reset()">Clear</button>
        <button id="toggle" onclick="toggle()">Toggle</button>
        <hr />
        <button id="iambicA" onclick="setMode('A')">Curtis-A</button>
        <button id="iambicB" onclick="setMode('B')">Curtis-B</button>
        <button id="iambicU" onclick="setMode('U')">Ultimatic</button>
        <span>&nbsp;</span>
        <button id="enableMemory" onclick="setMemory(true)">Enable Memory</button>
        <button id="disableMemory" onclick="setMemory(false)">Disable Memory</button>
        <hr />
        <button id="speed5" onclick="setSpeed(5)">5 WPM</button>
        <button id="speed10" onclick="setSpeed(10)">10 WPM</button>
        <button id="speed15" onclick="setSpeed(15)">15 WPM</button>
        <button id="speed20" onclick="setSpeed(20)">20 WPM</button>
        <button id="speed21" onclick="setSpeed(21)">21 WPM</button>
        <button id="speed22" onclick="setSpeed(22)">22 WPM</button>
        <button id="speed23" onclick="setSpeed(23)">23 WPM</button>
        <button id="speed24" onclick="setSpeed(24)">24 WPM</button>
        <button id="speed25" onclick="setSpeed(25)">25 WPM</button>
        <button id="speed30" onclick="setSpeed(30)">30 WPM</button>
        <button id="speed40" onclick="setSpeed(40)">40 WPM</button>
        <button id="speed50" onclick="setSpeed(50)">50 WPM</button>
        <hr />
        <a href="javascript:send('CQ')">CQ</a>
        <a href="javascript:send('QRL?')">QRL?</a>
        <a href="javascript:send('CU')">CU</a>
        <a href="javascript:send('DE')">DE</a>
        <a href="javascript:send('K')">K</a>
        <a href="javascript:send('KN')">KN</a>
        <a href="javascript:send('OP')">OP</a>
        <a href="javascript:send('NAME')">NAME</a>
        <a href="javascript:send('UR')">UR</a>
        <a href="javascript:send('RST')">RST</a>
        <a href="javascript:send('IS')">IS</a>
        <a href="javascript:send('599')">599</a>
        <a href="javascript:send('5NN')">5NN</a>
        <a href="javascript:send('KK7HXU')">KK7HXU</a>
        <a href="javascript:send('ASHLEY')">ASHLEY</a>
        <hr />
        <table>
            <tr>
                <th>Single Lever</th>
                <th>Ultimatic</th>
                <th>Curtis-A</th>
                <th>Curtis-B</th>
            </tr>
            <tr>
                <td valign="top"><!-- single lever -->
                    <ul>
                        <li><a href="javascript:simulateExamples(['L', 'LLLLLL', 'LLLLLLLLLL', 'LLLLLLLLLLLLLL', 'LLLLLLLLLLLLLLLLLL', 'R', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR'])">Repetitive elements</a></li>
                        <ul>
                            <li>Tap <a href="javascript:simulateKeys('L')">E</a>, <a href="javascript:simulateKeys('R')">T</a>, or hold <a href="javascript:simulateKeys('LLLLLL')">I</a>, <a href="javascript:simulateKeys('LLLLLLLLLL')">S</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL')">H</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLLLL')">5</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR')">M</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRR')">O</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">0</a></li>
                            <li>To <a href="javascript:simulateExamples(['LLLLL', 'LLLLLL', 'LLLLLLL'])">end of dit</a> or <a href="javascript:simulateExamples(['RRRRRRRRR', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRR'])">⅔ of dah</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LL RRRRR', 'LL RRRRRRRRRRRRR', 'LL RRRRRRRRRRRRRRRRRRRRR', 'LL RRRRRRRRRRRRRRRRRRRRRRRRRRRRR', 'RRR LLLLLL', 'RRR LLLLLLLLLL', 'RRR LLLLLLLLLLLLLL', 'RRR LLLLLLLLLLLLLLLLLL'])">Initial switch</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LL RRRRR')">A</a>, <a href="javascript:simulateKeys('LL RRRRRRRRRRRRR')">W</a>, <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRR')">J</a>, <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">1</a>, and <a href="javascript:simulateKeys('RRR LLLLLL')">N</a>, <a href="javascript:simulateKeys('RRR LLLLLLLLLL')">D</a>, <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLL')">B</a>, <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLLLLLL')">6</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLL RRRRR', 'LLLLLLLLLL RRRRR', 'LLLLLLLLLLLLLL RRRRR', 'RRRRRRRRRRRR LLLLL', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRR LLLLL'])">Ending switch</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLL RRRRR')">U</a>, <a href="javascript:simulateKeys('LLLLLLLLLL RRRRR')">V</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL RRRRR')">4</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRR LLLLL')">G</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRR LLLLL')">9</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLL RRRRRRRRRRRRRRRRRRRRR', 'LLLLLLLLLL RRRRRRRRRRRRR', 'RRRRRRRRRRRR LLLLLLLLL', 'RRRRRRRRRRRR LLLLLLLLLLLLL', 'RRRRRRRRRRRRRRRRRRRR LLLLLLLLL'])">Middle switch</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLL RRRRRRRRRRRRRRRRRRRRR')">2</a>, <a href="javascript:simulateKeys('LLLLLLLLLL RRRRRRRRRRRRR')">3</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRR LLLLLLLLL')">Z</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR LLLLLLLLLLLLL')">7</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRR LLLLLLLLL')">8</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LL RRRRR LLLLL', 'LL RRRRR LLLLLLLLL', 'RRR LLLLLL RRRRR', 'RRRR LLLLL RRRRRRRRRRRR'])">Early Interstitial</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LL RRRRR LLLLL')">R</a>, <a href="javascript:simulateKeys('LL RRRRR LLLLLLLLL')">L</a>, and <a href="javascript:simulateKeys('RRR LLLLLL RRRRR')">K</a>, <a href="javascript:simulateKeys('RRRR LLLLL RRRRRRRRRRRR')">Y</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLL RRRRR LLLLL', 'RRRRRRRRRRRR LLLLL RRRRR'])">Late interstitial</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLL RRRRR LLLLL')">F</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR LLLLL RRRRR')">Q</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LL RRRRRRRRRRRRR LLLLL', 'RRRR LLLLLLLLL RRRRR', 'LLLLLL RRRRRRRRRRRRR LLLLLLLLL'])">Long middle interstitial</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LL RRRRRRRRRRRRR LLLLL')">P</a>, <a href="javascript:simulateKeys('RRRR LLLLLLLLL RRRRR')">X</a>, <a href="javascript:simulateKeys('LLLLLL RRRRRRRRRRRRR LLLLLLLLL')">?</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['RRRR LLLLL RRRRR LLLLL', 'LL RRRRR LLLLL RRRRR LLLLL RRRRR', 'RRRR LLLLLLLLL RRRRR LLLLL'])">Alternating</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('RRRR LLLLL RRRRR LLLLL')">C</a>, <a href="javascript:simulateKeys('LL RRRRR LLLLL RRRRR LLLLL RRRRR')">. (period)</a>, <a href="javascript:simulateKeys('RRRR LLLLLLLLL RRRRR LLLLL')">/ (slash)</a></li>
                        </ul>
                    </li>
                </td>
                <td valign="top"><!-- ultimatic -->
                    <ul>
                        <li><a href="javascript:simulateExamples(['L', 'LLLLLL', 'LLLLLLLLLL', 'LLLLLLLLLLLLLL', 'LLLLLLLLLLLLLLLLLL', 'R', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR'])">Repetitive elements (same)</a></li>
                        <ul>
                            <li>Tap <a href="javascript:simulateKeys('L')">E</a>, <a href="javascript:simulateKeys('R')">T</a>, or hold <a href="javascript:simulateKeys('LLLLLL')">I</a>, <a href="javascript:simulateKeys('LLLLLLLLLL')">S</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL')">H</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLLLL')">5</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR')">M</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRR')">O</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">0</a></li>
                            <li>To <a href="javascript:simulateExamples(['LLLLL', 'LLLLLL', 'LLLLLLL'])">end of dit</a> or <a href="javascript:simulateExamples(['RRRRRRRRR', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRR'])">⅔ of dah</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSS', 'LLSSSSSSSSSSSSSS', 'LLSSSSSSSSSSSSSSSSSSSSSS', 'LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS', 'RRRSSSSSSS', 'RRRSSSSSSSSSSS', 'RRRSSSSSSSSSSSSSSS', 'RRRSSSSSSSSSSSSSSSSSSS'])">Initial switch (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSS')">A</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSS')">W</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSS')">J</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS')">1</a>, and <a href="javascript:simulateKeys('RRRSSSSSSS')">N</a>, <a href="javascript:simulateKeys('RRRSSSSSSSSSSS')">D</a>, <a href="javascript:simulateKeys('RRRSSSSSSSSSSSSSSS')">B</a>, <a href="javascript:simulateKeys('RRRSSSSSSSSSSSSSSSSSSS')">6</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSS', 'LLLLLLLLLLSSSSSS', 'LLLLLLLLLLLLLLSSSSSS', 'RRRRRRRRRRRRSSSSSS', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSSSS'])">Ending switch (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSS')">U</a>, <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSS')">V</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLSSSSSS')">4</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSS')">G</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSSSS')">9</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSSSSSSSSSSSSSSSSS', 'LLLLLLLLLLSSSSSSSSSSSSSS', 'RRRRRRRRRRRRSSSSSSSSSS', 'RRRRRRRRRRRRSSSSSSSSSSSSSS', 'RRRRRRRRRRRRRRRRRRRRSSSSSSSSSS'])">Middle switch (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSSSSSSSSSSSSSSSSS')">2</a>, <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSSSSSSSSSS')">3</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSSSS')">Z</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSSSSSSSS')">7</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRSSSSSSSSSS')">8</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSSLLLLLL', 'LLSSSSSSLLLLLLLLLL', 'RRRSSSSSSSRRRRRR', 'RRRRSSSSSSRRRRRRRRRRRRR'])">Early Interstitial (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSSLLLLLL')">R</a>, <a href="javascript:simulateKeys('LLSSSSSSLLLLLLLLLL')">L</a>, and <a href="javascript:simulateKeys('RRRSSSSSSSRRRRRR')">K</a>, <a href="javascript:simulateKeys('RRRRSSSSSSRRRRRRRRRRRRR')">Y</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSLLLLLL', 'RRRRRRRRRRRRSSSSSSRRRRRR'])">Late interstitial (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSLLLLLL')">F</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSRRRRRR')">Q</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSSSSSSSSSSLLLLLL', 'RRRRSSSSSSSSSSRRRRRR', 'LLLLLLSSSSSSSSSSSSSSLLLLLLLLLL'])">Long middle interstitial (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSLLLLLL')">P</a>, <a href="javascript:simulateKeys('RRRRSSSSSSSSSSRRRRRR')">X</a>, <a href="javascript:simulateKeys('LLLLLLSSSSSSSSSSSSSSLLLLLLLLLL')">?</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['RRRRSSSSSSRRRRRRSSSSSS', 'LLSSSSSSLLLLLLSSSSSSLLLLLLSSSSSS', 'RRRRSSSSSSSSSSRRRRRRSSSSSS'])">Alternating (multi-squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('RRRRSSSSSSRRRRRRSSSSSS')">C</a>, <a href="javascript:simulateKeys('LLSSSSSSLLLLLLSSSSSSLLLLLLSSSSSS')">. (period)</a>, <a href="javascript:simulateKeys('RRRRSSSSSSSSSSRRRRRRSSSSSS')">/ (slash)</a></li>
                        </ul>
                    </li>
                </td>
                <td valign="top"><!-- curtis-a -->
                    <ul>
                        <li><a href="javascript:simulateExamples(['L', 'LLLLLL', 'LLLLLLLLLL', 'LLLLLLLLLLLLLL', 'LLLLLLLLLLLLLLLLLL', 'R', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR'])">Repetitive elements (same)</a></li>
                        <ul>
                            <li>Tap <a href="javascript:simulateKeys('L')">E</a>, <a href="javascript:simulateKeys('R')">T</a>, or hold <a href="javascript:simulateKeys('LLLLLL')">I</a>, <a href="javascript:simulateKeys('LLLLLLLLLL')">S</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL')">H</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLLLL')">5</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR')">M</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRR')">O</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">0</a></li>
                            <li>To <a href="javascript:simulateExamples(['LLLLL', 'LLLLLL', 'LLLLLLL'])">end of dit</a> or <a href="javascript:simulateExamples(['RRRRRRRRR', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRR'])">⅔ of dah</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSS', 'LLSSSSSSRRRRRRRR', 'LLSSSSSSRRRRRRRRRRRRRRRR', 'LLSSSSSSRRRRRRRRRRRRRRRRRRRRRRRR', 'RRRSSSSSSS', 'RRRSSSSSSSLLLL', 'RRRSSSSSSSLLLLLLLL', 'RRRSSSSSSSLLLLLLLLLLLL'])">Initial switch (squeeze A, N, else partial)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSS')">A</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRR')">W</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRRRRRRRRRR')">J</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRRRRRRRRRRRRRRRRRR')">1</a>, and <a href="javascript:simulateKeys('RRRSSSSSSS')">N</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLL')">D</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLLLLLL')">B</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLLLLLLLLLL')">6</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSS', 'LLLLLLLLLLSSSSSS', 'LLLLLLLLLLLLLLSSSSSS', 'RRRRRRRRRRRRSSSSSS', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSSSS'])">Ending switch (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSS')">U</a>, <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSS')">V</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLSSSSSS')">4</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSS')">G</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSSSS')">9</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSRRRRRRRRRRRRRRRR', 'LLLLLLLLLLSSSSSSRRRRRRRR', 'RRRRRRRRRRRRSSSSSSLLLL', 'RRRRRRRRRRRRSSSSSSSLLLLLLL', 'RRRRRRRRRRRRRRRRRRRRSSSSSSSLLL'])">Middle switch (partial squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSRRRRRRRRRRRRRRRR')">2</a>, <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSSRRRRRRRR')">3</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSLLL')">Z</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSLLLLLLL')">7</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRSSSSSSSLLL')">8</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSSSSSSSS', 'LLSSSSSSSSSSSSLLLL', 'RRRSSSSSSSSSSSSS', 'RRRRSSSSSSSSSSSSRRRRRRR'])">Early Interstitial (squeeze longer)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSSSSSSSS')">R</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSLLLL')">L</a>, and <a href="javascript:simulateKeys('RRRSSSSSSSSSSSSS')">K</a>, <a href="javascript:simulateKeys('RRRRSSSSSSSSSSSSRRRRRRR')">Y</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSLLLLLL', 'RRRRRRRRRRRRSSSSSSRRRRRR'])">Late interstitial (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSLLLLLL')">F</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSRRRRRR')">Q</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSRRRRRRRRRRRRSSLLLL', 'RRRRSSLLLLLLLLSSRRRR', 'LLLLLLSSRRRRRRRRRRRRSSLLLLLLLL'])">Long middle interstitial (slap)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSRRRRRRRRRRRRSSLLLL')">P</a>, <a href="javascript:simulateKeys('RRRRSSLLLLLLLLSSRRRR')">X</a>, <a href="javascript:simulateKeys('LLLLLLSSRRRRRRRRRRRRSSLLLLLLLL')">?</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['RRSSSSSSSSSSSSSSSSSSSS', 'LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS', 'RRRRSSLLLLLLLSSSSSSSSSSSSS'])">Alternating (squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSSSSS')">C</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS')">. (period)</a>, <a href="javascript:simulateKeys('RRRRSSLLLLLLLSSSSSSSSSSSSS')">/ (slash)</a></li>
                        </ul>
                    </li>
                </td>
                <td valign="top"><!-- curtis-b -->
                    <ul>
                        <li><a href="javascript:simulateExamples(['L', 'LLLLLL', 'LLLLLLLLLL', 'LLLLLLLLLLLLLL', 'LLLLLLLLLLLLLLLLLL', 'R', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRR', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR'])">Repetitive elements (same)</a></li>
                        <ul>
                            <li>Tap <a href="javascript:simulateKeys('L')">E</a>, <a href="javascript:simulateKeys('R')">T</a>, or hold <a href="javascript:simulateKeys('LLLLLL')">I</a>, <a href="javascript:simulateKeys('LLLLLLLLLL')">S</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL')">H</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLLLL')">5</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRR')">M</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRR')">O</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">0</a></li>
                            <li>To <a href="javascript:simulateExamples(['LLLLL', 'LLLLLL', 'LLLLLLL'])">end of dit</a> or <a href="javascript:simulateExamples(['RRRRRRRRR', 'RRRRRRRRRRRR', 'RRRRRRRRRRRRRRR'])">⅔ of dah</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LSS  ', 'LLSSSSSSRRRRRRRR', 'LLSSSSSSRRRRRRRRRRRRRRRR', 'LLSSSSSSRRRRRRRRRRRRRRRRRRRRRRRR', 'RRRSSSS', 'RRRSSSSSSSLLLL', 'RRRSSSSSSSLLLLLLLL', 'RRRSSSSSSSLLLLLLLLLLLL'])">Initial switch (short squeeze A, N, else same)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LSS  ')">A</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRR')">W</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRRRRRRRRRR')">J</a>, <a href="javascript:simulateKeys('LLSSSSSSRRRRRRRRRRRRRRRRRRRRRRRR')">1</a>, and <a href="javascript:simulateKeys('RRRSSSS')">N</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLL')">D</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLLLLLL')">B</a>, <a href="javascript:simulateKeys('RRRSSSSSSSLLLLLLLLLLLL')">6</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLL RRRRR', 'LLLLLLLLLL RRRRR', 'LLLLLLLLLLLLLL RRRRR', 'RRRRRRRRRRRR LLLLL', 'RRRRRRRRRRRRRRRRRRRRRRRRRRRR LLLLL'])">Ending switch (slap)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLL RRRRR')">U</a>, <a href="javascript:simulateKeys('LLLLLLLLLL RRRRR')">V</a>, <a href="javascript:simulateKeys('LLLLLLLLLLLLLL RRRRR')">4</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRR LLLLL')">G</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRR LLLLL')">9</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSRRRRRRRRRRRRRRRR', 'LLLLLLLLLLSSSSSSRRRRRRRR', 'RRRRRRRRRRRRSSSSSSLLLL', 'RRRRRRRRRRRRSSSSSSSLLLLLLL', 'RRRRRRRRRRRRRRRRRRRRSSSSSSSLLL'])">Middle switch (same)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSRRRRRRRRRRRRRRRR')">2</a>, <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSSRRRRRRRR')">3</a>, and <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSLLL')">Z</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSSLLLLLLL')">7</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRSSSSSSSLLL')">8</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSSSSS', 'LLSSSSSSSSSSSSLLLL', 'RRRSSSSSSS   ', 'RRRRSSSSSSSSSSSSRRRRRRR'])">Early Interstitial (short squeeze R, K, else same)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSSSSS')">R</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSLLLL')">L</a>, and <a href="javascript:simulateKeys('RRRSSSSSSS   ')">K</a>, <a href="javascript:simulateKeys('RRRRSSSSSSSSSSSSRRRRRRR')">Y</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLLLLLSSSSSSLLLLLL', 'RRRRRRRRRRRRSSSSSSRRRRRR'])">Late interstitial (same)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLLLLLSSSSSSLLLLLL')">F</a>, <a href="javascript:simulateKeys('RRRRRRRRRRRRSSSSSSRRRRRR')">Q</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['LLSSRRRRRRRRRRRRSSLLLL', 'RRRRSSLLLLLLLLSSRRRR', 'LLLLLLSSRRRRRRRRRRRRSSLLLLLLLL'])">Long middle interstitial (same)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('LLSSRRRRRRRRRRRRSSLLLL')">P</a>, <a href="javascript:simulateKeys('RRRRSSLLLLLLLLSSRRRR')">X</a>, <a href="javascript:simulateKeys('LLLLLLSSRRRRRRRRRRRRSSLLLLLLLL')">?</a></li>
                        </ul>
                        <li><a href="javascript:simulateExamples(['RRSSSSSSSSSSSSSS      ', 'LLSSSSSSSSSSSSSSSSSSSSSSSS      ', 'RRRRSSLLLLLLLSSSSSSS      '])">Alternating (shorter squeeze)</a></li>
                        <ul>
                            <li><a href="javascript:simulateKeys('RRSSSSSSSSSSSSSS      ')">C</a>, <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSS      ')">. (period)</a>, <a href="javascript:simulateKeys('RRRRSSLLLLLLLSSSSSSS      ')">/ (slash)</a></li>
                        </ul>
                    </li>
                </td>
            </tr>
        </table>
        <h2>Initial Switch:</h2>
                <ul>
                    <li>
                        <span>Slap:</span><!--            --  ------  -->
                        <a href="javascript:simulateKeys('LLRR')">A</a>
                        <a href="javascript:simulateKeys('LLL RRRR')"><i>A</i></a>
                        <a href="javascript:simulateKeys('LLL    RRRR')">A (big gap)</a>
                        <a href="javascript:simulateKeys('LLLRRRRRRRR')">A</a>
                        <span>&nbsp;</span><!--           --  ------  ------  -->
                        <a href="javascript:simulateKeys('LL RRRRRRRRRR')">W</a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRR')"><I>W</I></a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRR')">W</a>
                        <span>&nbsp;</span><!--           --  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRR')">J</a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRR')"><I>J</I></a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRRRRR')">J</a>
                        <span>&nbsp;</span><!--           --  ------  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRRRRRRR')">1</a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRRRRRRRRRR')"><I>1</I></a>
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR')">1</a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              --  ------  -->
                        <a href="javascript:simulateKeys('LSS')">A (quick, mem)</a>
                        <a href="javascript:simulateKeys('LLLSSSSS')"><i>A</i></a>
                        <a href="javascript:simulateKeys('LLLSSSSSSSS')">A</a>
                        <span>&nbsp;</span><!--           --  ------  ------  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSS')">W</a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSS')"><I>W</I></a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSS')">W</a>
                        <span>&nbsp;</span><!--           --  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSS')">J</a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSS')"><I>J</I></a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSS')">J</a>
                        <span>&nbsp;</span><!--           --  ------  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSS')">6</a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS')"><I>6</I></a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS')">6</a>
                    </li>
                    <li>
                        <span>Slap:</span><!--            ------  --  -->
                        <a href="javascript:simulateKeys('RRLL')">N (mem)</a>
                        <a href="javascript:simulateKeys('RRRLLL')"><I>N (mem)</I></a>
                        <a href="javascript:simulateKeys('RRRR LLLL')">N (small gap)</a>
                        <a href="javascript:simulateKeys('RRR          LLL')">N (big gap)</a>
                        <a href="javascript:simulateKeys('RRRLLLLLLL')">N</a>
                        <span>&nbsp;</span><!--           ------  --  --  -->
                        <a href="javascript:simulateKeys('RRR LLLLLLLLL')">D</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLL')">D</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLL')">D</a>
                        <span>&nbsp;</span><!--           ------  --  --  --  -->
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLL')">B</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLL')">B</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLLL')">B</a>
                        <span>&nbsp;</span><!--           ------  --  --  --  --  -->
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLLLLL')">6</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLLLLLL')">6</a>
                        <a href="javascript:simulateKeys('RRR LLLLLLLLLLLLLLLLLLL')">6</a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              ------  --  -->
                        <a href="javascript:simulateKeys('RSS')"><I>N (quick, mem)</I></a>
                        <a href="javascript:simulateKeys('RRRSSS')">N (mem)</a>
                        <a href="javascript:simulateKeys('RRRSSSSSSSS')">N</a>
                        <span>&nbsp;</span><!--           ------  --  --  -->
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSS')">D</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSS')"><I>D</I></a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSS')">D</a>
                        <span>&nbsp;</span><!--           ------  --  --  --  -->
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSS')">B</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSS')"><I>B</I></a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSS')">B</a>
                        <span>&nbsp;</span><!--           ------  --  --  --  --  -->
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSSSS')">6</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSSSSS')"><I>6</I></a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSSSSSS')">6</a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Ending Switch:</b>
                <ul>
                    <li>
                        <span>Slap:</span><!--            --  --  ------  -->
                        <a href="javascript:simulateKeys('LLLLLRR')"><i>U (mem)</i></a>
                        <a href="javascript:simulateKeys('LLLLLLRR')"><i>U</i></a>
                        <a href="javascript:simulateKeys('LLLLLLLRR')">U</a>
                        <a href="javascript:simulateKeys('LLLLLL  RRRRRR')">U (on-beat)</a>
                        <a href="javascript:simulateKeys('LLLLLLL       RRRRR')">U (gap)</a>
                        <span>&nbsp;</span><!--           --  --  --  ------ -->
                        <a href="javascript:simulateKeys('LLLLLLLLLRR')">V (mem)</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLRR')"><I>V</I></a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLRR')">V</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLL  RRRRRR')">V (on-beat)</a>
                        <span>&nbsp;</span><!--           --  --  --  --  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLRR')">4 (mem)</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLLRR')"><I>4</I></a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLRR')">4</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLL  RRRRRR')">4 (on-beat)</a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              --  --  ------  -->
                        <a href="javascript:simulateKeys('LLLLLSS')">U (mem)</a>
                        <a href="javascript:simulateKeys('LLLLLLSS')"><i>U</i></a>
                        <a href="javascript:simulateKeys('LLLLLLLSS')">U</a>
                        <a href="javascript:simulateKeys('LLLLLLLSSSSSSS')">U (late/long)</a>
                        <span>&nbsp;</span><!--           --  --  --  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLLLLSS')">V (mem)</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLSS')"><i>V</i></a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLSS')">V</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLSSSSSSS')">V (late/long)</a>
                        <span>&nbsp;</span><!--           --  --  --  --  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLSS')">4 (mem)</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLLSS')"><i>4</i></a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLSS')">4</a>
                        <a href="javascript:simulateKeys('LLLLLLLLLLLLLLLSSSSSSS')">4 (late/long)</a>
                    </li>
                    <li>
                        <span>Slap:</span><!--            ------  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRLL')">G (mem)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRLL')"><i>G (mem)</i></a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRLL')">G</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRR  LL')">G (small gap/on-beat)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRR        LL')">G (big gap)</a>
                        <span>&nbsp;</span><!--           ------  ------  ------  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRLL')">9 (mem)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRLL')"><i>9 (mem)</i></a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLL')">9</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRR  LL')">9 (small gap/on-beat)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRR        LL')">9 (big gap)</a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              ------  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRSS')">G</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRSS')"><i>G</i></a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRSS')">G</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRSSSS')">G (late/long)</a>
                        <span>&nbsp;</span><!--           ------  ------  ------  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRSS')">9</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRSS')"><i>9</i></a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRSS')">9</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRSSSS')">9 (late/long)</a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Middle Switch:</b>
                <ul>
                    <li>
                        <span>Slap:</span><!--            ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRLLLLLLLLLL')"><i>Z</i></a>
                        <a href="javascript:simulateKeys('RRRRRRRRRLLLLLLLLLLLLL')">Z (early switch)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRLLLLLLL')">Z (late/on-beat switch)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRLLLLLLLLLL')">Z (early release)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRLLLLLLLLLLLL')">Z (late release)</a>
                        <!--                              ------  ------  --  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRLLLLLLLLLLLLLL')"><i>7</i></a>
                        <!--                              ------  ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRLLLLLLLLLLL')"><i>8</i></a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRSSSSSSSSSSS')"><i>Z</i></a>
                        <!--                              ------  ------  --  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRSSSSSSSSSSSSSSS')"><i>7</i></a>
                        <!--                              ------  ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRRRRRSSSSSSSSSSS')"><i>8</i></a>
                    </li>
                    <li>
                        <span>Slap:</span><!--            --  --  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLRRRRRRRRRRRRRRRRRRRRRR')"><i>2</i></a>
                        <a href="javascript:simulateKeys('LLLLLRRRRRRRRRRRRRRRRRRRRRRR')">2 (early switch)</a>
                        <a href="javascript:simulateKeys('LLLLLLLRRRRRRRRRRRRRRRRRRRRR')">2 (late/on-beat switch)</a>
                        <a href="javascript:simulateKeys('LLLLLLRRRRRRRRRRRRRRRRRRR')">2 (early release)</a>
                        <a href="javascript:simulateKeys('LLLLLLRRRRRRRRRRRRRRRRRRRRRRRRR')">2 (late release)</a>
                        <!--                              --  --  --  ------  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLLLLLRRRRRRRRRRRRRR')"><i>3</i></a>
                        <span>Squeeze/Ultimatic:</span>
                        <!--                              --  --  ------  ------  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLSSSSSSSSSSSSSSSSSSSSS')"><i>2</i></a>
                        <!--                              --  --  --  ------  ------  -->
                        <a href="javascript:simulateKeys('LLLLLLLLLLSSSSSSSSSSSSS')"><i>3</i></a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Early Interstitial:</b>
                <ul>
                    <li>
                        <span>Slap:</span><!--            --  ------  --  -->
                        <a href="javascript:simulateKeys('LLLRRRRRRRRLLL')">R</a>
                        <!--                              --  ------  --  --  -->
                        <a href="javascript:simulateKeys('LLLRRRRRRRRLLLLLLL')">L</a>
                        <span>Squeeze:</span>
                        <!--                              --  ------  --  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSS')">R (Curtis-A)</a>
                        <a href="javascript:simulateKeys('LLSSSSS')">R (Curtis-B)</a>
                        <a href="javascript:simulateKeys('LLSSSSSLLLLLLL')">R (All)</a>
                        <!--                              --  ------  --  --  -->
                        <a href="javascript:simulateKeys('LLSSSSSLLLLLLLLLLL')">L (All)</a>
                    </li>
                    <li>
                        <span>Slap:</span><!--            ------  --  ------  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLRRRRRRR')">K</a>
                        <!--                              ------  --  ------  ------  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLRRRRRRRRRRRRRRR')">Y</a>
                        <span>Squeeze/Curtis/Ultimatic:</span>
                        <!--                              ------  --  ------  -->
                        <a href="javascript:simulateKeys('RRRSSSSSSSSSSSS')">K (Curtis-A)</a>
                        <a href="javascript:simulateKeys('RRRSSSSSSS')">K (Curtis-B)</a>
                        <a href="javascript:simulateKeys('RRSSSSRRRRRRRRR')">K (Ultimatic, mem)</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSRRRRR')">K (Ultimatic)</a>
                        <!--                              ------  --  ------  ------  -->
                        <a href="javascript:simulateKeys('RRSSSSRRRRRRRRRRRRRRRRR')">Y (All, mem)</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSRRRRRRRRRRRRR')">Y (All)</a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Late Interstitial:</b>
                <ul>
                    <li>
                        <span>Slap:</span><!--            --  --  ------  --  -->
                        <a href="javascript:simulateKeys('LLLLLLLRRRRRRRRLLL')">F</a>
                        <!--                              ------  ------  --  ------  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRRLLLLRRRRRRR')">Q</a>
                        <span>Squeeze:</span>
                        <!--                              --  --  ------  --  -->
                        <a href="javascript:simulateKeys('LLLLLLSSSSLLLLLLLL')">F</a>
                        <!--                              ------  ------  --  ------  -->
                        <a href="javascript:simulateKeys('RRRRRRRRRRRSSSSRRRRRRRR')">Q (mem)</a>
                        <a href="javascript:simulateKeys('RRRRRRRRRRRRRRSSSSRRRRR')">Q</a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Long Middle Interstitial:</b>
                <ul>
                    <li>
                        <span>Slap/Curtis:</span><!--     --  ------  ------  --  -->
                        <a href="javascript:simulateKeys('LL RRRRRRRRRRRRR LLLLL')">P</a>
                        <!--                              ------  --  --  ------  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLLLLLRRRRRRR')">X</a>
                        <!--                              --  --  ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('LLLLLLLRRRRRRRRRRRRRRRRLLLLLLL')">?</a>
                        <span>Squeeze/Ultimatic:</span><!--         --  ------  ------  --  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSLLLLLLL')">P</a>
                        <!--                              ------  --  --  ------  -->
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSRRRRR')">X</a>
                        <!--                              --  --  ------  ------  --  --  -->
                        <a href="javascript:simulateKeys('LLLLLLSSSSSSSSSSSSSLLLLLLLLLLL')">?</a>
                    </li>
                </ul>
            </li>
            <li>
                <b>Alternating:</b>
                <ul>
                    <li>
                        <span>Slap:</span><!--            ------  --  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLRRRRRRRRLLL')">C</a>
                        <!--                              ------  --  --  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLLLLLRRRRRRRRLLL')">/ (slash)</a>
                        <!--                              --  ------  --  ------  --  ------  -->
                        <a href="javascript:simulateKeys('LLLRRRRRRRRLLLLRRRRRRRRLLLLRRRRR')">. (period)</a>
                        <span>Squeeze:</span><!--         ------  --  ------  --  -->
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSSSSSSSSS')">C (Curtis-A)</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSS')">C (Curtis-B)</a>
                        <a href="javascript:simulateKeys('RRSSSSRRRRRRRRSSSS')">C (Ultimatic/All, mem)</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSRRRRRSSSSSSS')">C (Ultimatic/All)</a>
                        <!--                              ------  --  --  ------  --  -->
                        <a href="javascript:simulateKeys('RRRRRRRLLLLLLLLRRRRSSSSSSS')">/ (Curtis-A)</a>
                        <a href="javascript:simulateKeys('RRRRRRRLLLLLLLLRRRRSSS')">/ (Curtis-B)</a>
                        <a href="javascript:simulateKeys('RRSSSSSSSSSSSSRRRRRSSSSSSS')">/ (Ultimatic)</a>
                        <!--                              --  ------  --  ------  --  ------  -->
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSSSSSSS')">. (Curtis-A)</a>
                        <a href="javascript:simulateKeys('LLSSSSSSSSSSSSSSSSSSSSSSSS')">. (Curtis-B)</a>
                        <a href="javascript:simulateKeys('LLSSSSSLLLLLLLSSSSSLLLLLLLSSSSS')">. (Ultimatic)</a>
                    </li>
                </ul>
            </li>
        </ul>
    </body>
</html>